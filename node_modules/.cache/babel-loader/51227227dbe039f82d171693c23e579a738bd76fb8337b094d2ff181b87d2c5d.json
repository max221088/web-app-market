{"ast":null,"code":"export default {\n  name: 'AddBlock',\n  props: ['notes'],\n  data: function () {\n    return {\n      modalIsOpen: false,\n      cat: '',\n      con: '',\n      newNote: {\n        cat: '',\n        con: ''\n      }\n    };\n  },\n  methods: {\n    openModal() {\n      //this.note.cat = '';\n      //this.note.con = '';\n      this.modalIsOpen = true;\n    },\n    closeModal() {\n      this.modalIsOpen = false;\n      //this.note.cat = '';\n      //this.note.con = '';\n    },\n\n    addNotes() {\n      this.newNote.cat = this.cat;\n      this.newNote.con = this.con;\n      //let key = localStorage.length;\n      //localStorage.setItem(key, JSON.stringify(this.note));\n      //this.$emit('sendNots', JSON.parse(localStorage.getItem));\n      //this.newNote.push(this.note) ;\n      //this.newNote.splice(0, 0, this.note);\n      //this.$store.state.notes = this.newNote;\n      //this.$store.state.notes = this.newNote.splice(0, 0, this.note);\n      //this.$emit('sendNotes', Object.keys(localStorage));\n      //this.closeModal();\n      //this.$store.getters['getNotes'].splice(0, 0, this.note);\n\n      // this.notes.cat = this.note.cat;\n      // this.notes.con = this.note.con;\n    }\n  },\n\n  computed: {\n    categories() {\n      return this.$store.getters['getCategories'];\n    },\n    notesStor() {\n      return this.$store.getters['getNotes'];\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","modalIsOpen","cat","con","newNote","methods","openModal","closeModal","addNotes","computed","categories","$store","getters","notesStor"],"sources":["src/components/AddBlock.vue"],"sourcesContent":["<template>\n    <div class=\"modal\" v-bind:class=\"{'active': modalIsOpen}\">\n        <div class=\"overlay\" @click=\"closeModal()\"></div>\n        <div class=\"form-container\">\n            <h5>Celect Category</h5>\n            <select name=\"category\" id=\"category\" v-model.lazy=\"cat\">\n                <option v-for=\"(items, index) in categories\" :key=\"index\">{{ items }}</option>\n            </select>\n            <h5>Content</h5>\n            <textarea name=\"contain\" id=\"contain\" cols=\"30\" rows=\"10\" v-model.lazy=\"con\"></textarea>\n            <div class=\"btn-container\">\n                <button class=\"btn-add\" @click=\"addNotes()\">ADD</button>\n                <button class=\"btn-cancel\" @click=\"closeModal()\">CANCEL</button>\n                <p>{{ cat }}</p>\n                <p>{{ con }}</p>\n                <p>{{ newNote }}</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'AddBlock',\n  props: ['notes'],\n  data: function() {\n    return {\n      modalIsOpen: false,\n      cat: '',\n      con: '',\n      newNote: {\n        cat: '',\n        con: ''\n      },\n    }\n  },\n  methods: {\n    openModal () {\n      //this.note.cat = '';\n      //this.note.con = '';\n      this.modalIsOpen = true;\n    },\n    closeModal () {\n      this.modalIsOpen = false;\n      //this.note.cat = '';\n      //this.note.con = '';\n    },\n    addNotes () {\n        this.newNote.cat = this.cat;\n        this.newNote.con = this.con;\n         //let key = localStorage.length;\n         //localStorage.setItem(key, JSON.stringify(this.note));\n         //this.$emit('sendNots', JSON.parse(localStorage.getItem));\n        //this.newNote.push(this.note) ;\n        //this.newNote.splice(0, 0, this.note);\n        //this.$store.state.notes = this.newNote;\n        //this.$store.state.notes = this.newNote.splice(0, 0, this.note);\n        //this.$emit('sendNotes', Object.keys(localStorage));\n        //this.closeModal();\n        //this.$store.getters['getNotes'].splice(0, 0, this.note);\n        \n        // this.notes.cat = this.note.cat;\n        // this.notes.con = this.note.con;\n    }\n  },\n  computed: {\n        categories () {\n            return this.$store.getters['getCategories'];\n        },\n        notesStor () {\n            return this.$store.getters['getNotes'];\n        }\n    }\n}\n</script>"],"mappings":"AAsBA;EACAA,IAAA;EACAC,KAAA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,WAAA;MACAC,GAAA;MACAC,GAAA;MACAC,OAAA;QACAF,GAAA;QACAC,GAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,UAAA;MACA;MACA;MACA,KAAAL,WAAA;IACA;IACAM,WAAA;MACA,KAAAN,WAAA;MACA;MACA;IACA;;IACAO,SAAA;MACA,KAAAJ,OAAA,CAAAF,GAAA,QAAAA,GAAA;MACA,KAAAE,OAAA,CAAAD,GAAA,QAAAA,GAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;IACA;EACA;;EACAM,QAAA;IACAC,WAAA;MACA,YAAAC,MAAA,CAAAC,OAAA;IACA;IACAC,UAAA;MACA,YAAAF,MAAA,CAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}