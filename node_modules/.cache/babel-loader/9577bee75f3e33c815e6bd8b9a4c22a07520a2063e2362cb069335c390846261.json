{"ast":null,"code":"export default {\n  name: 'ShowNotes',\n  props: ['note', 'i'],\n  data: function () {\n    return {\n      startCoords: [],\n      saveCoords: [],\n      distance: [],\n      notes: [],\n      action: false,\n      areaWidth: window.visualViewport.width\n    };\n  },\n  methods: {\n    startMove() {\n      //console.log(this.$el.getAttribute('data-key'));\n      let index = this.$el.getAttribute('data-key');\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n      //console.log(event.pageX);\n      this.startCoords = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      this.saveCoords = {\n        x: this.notes[index].x,\n        y: this.notes[index].y\n      };\n      this.action = true;\n      //console.log(this.areaWidth);\n      // console.log(this.saveCoords)\n    },\n\n    finishMove() {\n      this.action = false;\n      let index = this.$el.getAttribute('data-key');\n      console.log(index);\n      this.notes[index].x = this.distance.x;\n      this.notes[index].y = this.distance.y;\n      localStorage.setItem('notes', JSON.stringify(this.notes));\n    },\n    move() {\n      let index = this.$el.getAttribute('data-key');\n      //console.log(index);\n      if (this.action) {\n        this.distance = {\n          x: this.saveCoords.x + event.pageX - this.startCoords.x,\n          y: this.saveCoords.y + event.pageY - this.startCoords.y\n        };\n        this.notes[index].x = this.distance.x;\n        this.notes[index].y = this.distance.y;\n        this.$emit('moveNote', this.notes);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","startCoords","saveCoords","distance","notes","action","areaWidth","window","visualViewport","width","methods","startMove","index","$el","getAttribute","JSON","parse","localStorage","getItem","x","event","pageX","y","pageY","finishMove","console","log","setItem","stringify","move","$emit"],"sources":["src/components/ShowNotes.vue"],"sourcesContent":["<template>\n    <div class=\"note\" v-bind:style=\"{ top: note.y + 'px', left: note.x + 'px'}\" :data-key=i \n    @mousedown=\"startMove()\" @mouseup=\"finishMove()\" @mousemove=\"move()\">\n        <h5 class=\"category-title\">{{ note.cat }}</h5>\n        <p class=\"note-text\">{{ note.con }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ShowNotes',\n    props: ['note', 'i'],\n    data: function () {\n      return {\n        startCoords: [],\n        saveCoords: [],\n        distance: [],\n        notes: [],\n        action: false,\n        areaWidth: window.visualViewport.width\n      }\n    },\n    methods: {\n        startMove () {\n      //console.log(this.$el.getAttribute('data-key'));\n      let index = this.$el.getAttribute('data-key');\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n      //console.log(event.pageX);\n      this.startCoords = ({\n        x: event.pageX,\n        y: event.pageY\n      });\n      this.saveCoords = ({\n        x: this.notes[index].x,\n        y: this.notes[index].y\n      })\n      this.action = true;\n      //console.log(this.areaWidth);\n      // console.log(this.saveCoords)\n    },\n    finishMove () {\n      this.action = false;\n      let index = this.$el.getAttribute('data-key');\n      console.log(index);\n      this.notes[index].x = this.distance.x;\n      this.notes[index].y = this.distance.y;\n      localStorage.setItem('notes', JSON.stringify(this.notes))\n    },\n    move () {\n      let index = this.$el.getAttribute('data-key');\n      //console.log(index);\n      if (this.action) {\n        this.distance = ({\n          x: (this.saveCoords.x + event.pageX - this.startCoords.x),\n          y: (this.saveCoords.y + event.pageY - this.startCoords.y)\n        })\n        this.notes[index].x = this.distance.x;\n        this.notes[index].y = this.distance.y;\n        this.$emit('moveNote', this.notes);\n      } \n    }\n  }\n}\n</script>"],"mappings":"AASA;EACAA,IAAA;EACAC,KAAA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,WAAA;MACAC,UAAA;MACAC,QAAA;MACAC,KAAA;MACAC,MAAA;MACAC,SAAA,EAAAC,MAAA,CAAAC,cAAA,CAAAC;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA;MACA,IAAAC,KAAA,QAAAC,GAAA,CAAAC,YAAA;MACA,KAAAV,KAAA,GAAAW,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA;MACA,KAAAjB,WAAA;QACAkB,CAAA,EAAAC,KAAA,CAAAC,KAAA;QACAC,CAAA,EAAAF,KAAA,CAAAG;MACA;MACA,KAAArB,UAAA;QACAiB,CAAA,OAAAf,KAAA,CAAAQ,KAAA,EAAAO,CAAA;QACAG,CAAA,OAAAlB,KAAA,CAAAQ,KAAA,EAAAU;MACA;MACA,KAAAjB,MAAA;MACA;MACA;IACA;;IACAmB,WAAA;MACA,KAAAnB,MAAA;MACA,IAAAO,KAAA,QAAAC,GAAA,CAAAC,YAAA;MACAW,OAAA,CAAAC,GAAA,CAAAd,KAAA;MACA,KAAAR,KAAA,CAAAQ,KAAA,EAAAO,CAAA,QAAAhB,QAAA,CAAAgB,CAAA;MACA,KAAAf,KAAA,CAAAQ,KAAA,EAAAU,CAAA,QAAAnB,QAAA,CAAAmB,CAAA;MACAL,YAAA,CAAAU,OAAA,UAAAZ,IAAA,CAAAa,SAAA,MAAAxB,KAAA;IACA;IACAyB,KAAA;MACA,IAAAjB,KAAA,QAAAC,GAAA,CAAAC,YAAA;MACA;MACA,SAAAT,MAAA;QACA,KAAAF,QAAA;UACAgB,CAAA,OAAAjB,UAAA,CAAAiB,CAAA,GAAAC,KAAA,CAAAC,KAAA,QAAApB,WAAA,CAAAkB,CAAA;UACAG,CAAA,OAAApB,UAAA,CAAAoB,CAAA,GAAAF,KAAA,CAAAG,KAAA,QAAAtB,WAAA,CAAAqB;QACA;QACA,KAAAlB,KAAA,CAAAQ,KAAA,EAAAO,CAAA,QAAAhB,QAAA,CAAAgB,CAAA;QACA,KAAAf,KAAA,CAAAQ,KAAA,EAAAU,CAAA,QAAAnB,QAAA,CAAAmB,CAAA;QACA,KAAAQ,KAAA,kBAAA1B,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}