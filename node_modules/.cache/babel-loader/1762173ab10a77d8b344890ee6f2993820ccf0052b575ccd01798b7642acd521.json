{"ast":null,"code":"export default {\n  name: 'ShowNotes',\n  props: ['note', 'i'],\n  data: function () {\n    return {\n      startCoords: [],\n      saveCoords: [],\n      distance: [],\n      index: '',\n      notes: [],\n      action: false,\n      areaWidth: window.visualViewport.width,\n      areaHeight: window.visualViewport.height\n    };\n  },\n  methods: {\n    show() {\n      this.notes[this.index].x = this.distance.x;\n      this.notes[this.index].y = this.distance.y;\n      this.$emit('moveNote', this.notes);\n    },\n    startMove() {\n      //console.log(this.$el.getAttribute('data-key'));\n      this.index = this.$el.getAttribute('data-key');\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n      //console.log(event.pageX);\n      this.startCoords = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      this.saveCoords = {\n        x: this.notes[this.index].x,\n        y: this.notes[this.index].y\n      };\n      this.action = true;\n      //console.log(this.areaWidth);\n      // console.log(this.saveCoords)\n    },\n\n    finishMove() {\n      this.action = false;\n      //console.log(index);\n      //this.notes[this.index].x = this.distance.x;\n      //this.notes[this.index].y = this.distance.y;\n      localStorage.setItem('notes', JSON.stringify(this.notes));\n    },\n    move() {\n      //let index = this.$el.getAttribute('data-key');\n      //console.log(index);\n      if (this.action) {\n        this.distance = {\n          x: this.saveCoords.x + event.pageX - this.startCoords.x,\n          y: this.saveCoords.y + event.pageY - this.startCoords.y\n        };\n        //console.log(this.distance.x > this.areaWidth - 100);\n        if (this.distance.x > this.areaWidth - 100) {\n          this.distance.x = this.areaWidth - 100;\n          //this.show(index);\n        }\n        // else {\n        //   this.show(index);\n        // }\n        if (this.distance.y > this.areaHeight - 100) {\n          this.distance.y = this.areaHeight - 100;\n          //this.show(index);\n        }\n        // else {\n        //   this.move(index);\n        // }\n        if (this.distance.y < 40) {\n          this.distance.y = 40;\n          //this.show(index);\n        }\n        //  else {\n        //   this.show(index);\n        // }\n        if (this.distance.x < 0) {\n          this.distance.x = 0;\n          //this.show(index);\n        }\n\n        this.show();\n        // else {\n        //   this.show(index);\n        // }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","startCoords","saveCoords","distance","index","notes","action","areaWidth","window","visualViewport","width","areaHeight","height","methods","show","x","y","$emit","startMove","$el","getAttribute","JSON","parse","localStorage","getItem","event","pageX","pageY","finishMove","setItem","stringify","move"],"sources":["src/components/ShowNotes.vue"],"sourcesContent":["<template>\n    <div class=\"note\" v-bind:style=\"{ top: note.y + 'px', left: note.x + 'px'}\" :data-key=i \n    @mousedown=\"startMove()\" @mouseup=\"finishMove()\" @mousemove=\"move()\">\n        <h5 class=\"category-title\">{{ note.cat }}</h5>\n        <p class=\"note-text\">{{ note.con }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ShowNotes',\n    props: ['note', 'i'],\n    data: function () {\n      return {\n        startCoords: [],\n        saveCoords: [],\n        distance: [],\n        index: '',\n        notes: [],\n        action: false,\n        areaWidth: window.visualViewport.width,\n        areaHeight: window.visualViewport.height,\n      }\n    },\n    methods: {\n      show () {\n        this.notes[this.index].x = this.distance.x;\n        this.notes[this.index].y = this.distance.y;\n        this.$emit('moveNote', this.notes);\n      },\n      startMove () {\n      //console.log(this.$el.getAttribute('data-key'));\n      this.index = this.$el.getAttribute('data-key');\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n      //console.log(event.pageX);\n      this.startCoords = ({\n        x: event.pageX,\n        y: event.pageY\n      });\n      this.saveCoords = ({\n        x: this.notes[this.index].x,\n        y: this.notes[this.index].y\n      })\n      this.action = true;\n      //console.log(this.areaWidth);\n      // console.log(this.saveCoords)\n    },\n    finishMove () {\n      this.action = false;\n      //console.log(index);\n      //this.notes[this.index].x = this.distance.x;\n      //this.notes[this.index].y = this.distance.y;\n      localStorage.setItem('notes', JSON.stringify(this.notes))\n    },\n    move () {\n      //let index = this.$el.getAttribute('data-key');\n      //console.log(index);\n      if (this.action) {\n        this.distance = ({\n          x: (this.saveCoords.x + event.pageX - this.startCoords.x),\n          y: (this.saveCoords.y + event.pageY - this.startCoords.y)\n        });\n        //console.log(this.distance.x > this.areaWidth - 100);\n        if (this.distance.x > this.areaWidth - 100) {\n\t\t\t\tthis.distance.x = this.areaWidth - 100;\n        //this.show(index);\n        } \n        // else {\n        //   this.show(index);\n        // }\n        if (this.distance.y > this.areaHeight - 100) {\n        this.distance.y = this.areaHeight - 100;\n\t\t\t\t//this.show(index);\n        } \n        // else {\n        //   this.move(index);\n        // }\n        if (this.distance.y < 40) {\n\t\t\t\tthis.distance.y = 40;\n        //this.show(index);\n        }\n        //  else {\n        //   this.show(index);\n        // }\n        if (this.distance.x < 0) {\n        this.distance.x = 0;\n        //this.show(index);\n        } \n        this.show();\n        // else {\n        //   this.show(index);\n        // }\n      } \n    }\n  }\n}\n</script>"],"mappings":"AASA;EACAA,IAAA;EACAC,KAAA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,WAAA;MACAC,UAAA;MACAC,QAAA;MACAC,KAAA;MACAC,KAAA;MACAC,MAAA;MACAC,SAAA,EAAAC,MAAA,CAAAC,cAAA,CAAAC,KAAA;MACAC,UAAA,EAAAH,MAAA,CAAAC,cAAA,CAAAG;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAT,KAAA,MAAAD,KAAA,EAAAW,CAAA,QAAAZ,QAAA,CAAAY,CAAA;MACA,KAAAV,KAAA,MAAAD,KAAA,EAAAY,CAAA,QAAAb,QAAA,CAAAa,CAAA;MACA,KAAAC,KAAA,kBAAAZ,KAAA;IACA;IACAa,UAAA;MACA;MACA,KAAAd,KAAA,QAAAe,GAAA,CAAAC,YAAA;MACA,KAAAf,KAAA,GAAAgB,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA;MACA,KAAAvB,WAAA;QACAc,CAAA,EAAAU,KAAA,CAAAC,KAAA;QACAV,CAAA,EAAAS,KAAA,CAAAE;MACA;MACA,KAAAzB,UAAA;QACAa,CAAA,OAAAV,KAAA,MAAAD,KAAA,EAAAW,CAAA;QACAC,CAAA,OAAAX,KAAA,MAAAD,KAAA,EAAAY;MACA;MACA,KAAAV,MAAA;MACA;MACA;IACA;;IACAsB,WAAA;MACA,KAAAtB,MAAA;MACA;MACA;MACA;MACAiB,YAAA,CAAAM,OAAA,UAAAR,IAAA,CAAAS,SAAA,MAAAzB,KAAA;IACA;IACA0B,KAAA;MACA;MACA;MACA,SAAAzB,MAAA;QACA,KAAAH,QAAA;UACAY,CAAA,OAAAb,UAAA,CAAAa,CAAA,GAAAU,KAAA,CAAAC,KAAA,QAAAzB,WAAA,CAAAc,CAAA;UACAC,CAAA,OAAAd,UAAA,CAAAc,CAAA,GAAAS,KAAA,CAAAE,KAAA,QAAA1B,WAAA,CAAAe;QACA;QACA;QACA,SAAAb,QAAA,CAAAY,CAAA,QAAAR,SAAA;UACA,KAAAJ,QAAA,CAAAY,CAAA,QAAAR,SAAA;UACA;QACA;QACA;QACA;QACA;QACA,SAAAJ,QAAA,CAAAa,CAAA,QAAAL,UAAA;UACA,KAAAR,QAAA,CAAAa,CAAA,QAAAL,UAAA;UACA;QACA;QACA;QACA;QACA;QACA,SAAAR,QAAA,CAAAa,CAAA;UACA,KAAAb,QAAA,CAAAa,CAAA;UACA;QACA;QACA;QACA;QACA;QACA,SAAAb,QAAA,CAAAY,CAAA;UACA,KAAAZ,QAAA,CAAAY,CAAA;UACA;QACA;;QACA,KAAAD,IAAA;QACA;QACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}