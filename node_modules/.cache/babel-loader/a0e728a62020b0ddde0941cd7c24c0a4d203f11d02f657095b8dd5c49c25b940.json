{"ast":null,"code":"import MenuBar from './components/MenuBar.vue';\nimport AddBlock from './components/AddBlock.vue';\nimport ShowNotes from './components/ShowNotes.vue';\nimport MessageInfo from './components/MessageInfo.vue';\nimport EditNote from './components/EditNote.vue';\nexport default {\n  name: 'App',\n  components: {\n    MenuBar,\n    AddBlock,\n    ShowNotes,\n    MessageInfo,\n    EditNote\n  },\n  data: function () {\n    return {\n      notes: [],\n      Element: '',\n      added: 'Added',\n      remove: 'Removed'\n    };\n  },\n  methods: {\n    showModal() {\n      this.$refs.modal.openModal();\n    },\n    startEditNote(data) {\n      this.editIndex = data;\n      this.$refs.edit.openModal();\n    },\n    showMessageDel(data) {\n      this.Element = data;\n      this.$refs.messageDel.sendMessage();\n    },\n    showMessageAdd(data) {\n      this.Element = data;\n      this.$refs.messageAdd.sendMessage();\n    },\n    filteredByCategory: function (data) {\n      this.notes = data;\n    },\n    filterByQuery: function (data) {\n      this.notes = data;\n    },\n    getNote: function () {\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n    },\n    move: function (data) {\n      this.notes = data;\n    }\n  },\n  computed: {\n    getNotesFromLS() {\n      return this.$store.getters['getNotesFromLS'];\n    }\n  },\n  created() {\n    this.$store.dispatch('getFromLS');\n    this.notes = JSON.parse(localStorage.getItem('notes')) != 0 ? JSON.parse(localStorage.getItem('notes')) : this.notes = [];\n  }\n};","map":{"version":3,"names":["MenuBar","AddBlock","ShowNotes","MessageInfo","EditNote","name","components","data","notes","Element","added","remove","methods","showModal","$refs","modal","openModal","startEditNote","editIndex","edit","showMessageDel","messageDel","sendMessage","showMessageAdd","messageAdd","filteredByCategory","filterByQuery","getNote","JSON","parse","localStorage","getItem","move","computed","getNotesFromLS","$store","getters","created","dispatch"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <MenuBar :showModal=\"showModal\" @sendFiltCategoty=\"filteredByCategory\" @sendFiltQuery=\"filterByQuery\"/>\n    <transition-group tag=\"div\" name=\"notes\">\n      <!-- <div class=\"wropp\"> -->\n      <ShowNotes v-for=\"(item, index) in notes\" :note=\"item\" :key=\"index\" :i=\"index\" \n      @moveNote=\"move\" @message=\"showMessageDel\"\n      @sendIndex=\"startEditNote\"/>\n    <!-- </div> -->\n    </transition-group>\n    <AddBlock ref=\"modal\" @sendNotes=\"getNote\" @message=\"showMessageAdd\"/>\n    <EditNote ref=\"edit\" @sendNotes=\"getNote\"/>\n    <MessageInfo ref=\"messageDel\" :name=\"Element\" :content=\"remove\"/>\n    <MessageInfo ref=\"messageAdd\" :name=\"Element\" :content=\"added\"/>\n  </div>\n</template>\n\n<script>\n  import MenuBar from './components/MenuBar.vue'\n  import AddBlock from './components/AddBlock.vue'\n  import ShowNotes from './components/ShowNotes.vue'\n  import MessageInfo from './components/MessageInfo.vue'\n  import EditNote from './components/EditNote.vue'\n\n\n  export default {\n    name: 'App',\n    components: {\n      MenuBar,\n      AddBlock,\n      ShowNotes,\n      MessageInfo,\n      EditNote\n    },\n    data: function () {\n      return {\n        notes: [],\n        Element: '',\n        added: 'Added',\n        remove: 'Removed'\n      }\n    },\n    methods: {\n      showModal () {\n        this.$refs.modal.openModal();\n      },\n      startEditNote (data) {\n        this.editIndex = data;\n        this.$refs.edit.openModal();\n      },\n      showMessageDel (data) {\n        this.Element = data;\n        this.$refs.messageDel.sendMessage();\n      },\n      showMessageAdd (data) {\n        this.Element = data;\n        this.$refs.messageAdd.sendMessage();\n      },\n      filteredByCategory: function (data) {\n        this.notes = data;\n      },\n      filterByQuery: function (data) {\n        this.notes = data;\n      },\n      getNote: function () {\n        this.notes = JSON.parse(localStorage.getItem('notes'));\n      },\n      move: function (data) {\n        this.notes = data;\n      }\n    },\n    computed: {\n      getNotesFromLS () {\n              return this.$store.getters['getNotesFromLS'];\n          },\n    },\n    created() {\n      this.$store.dispatch('getFromLS');\n      this.notes = (JSON.parse(localStorage.getItem('notes')) != 0) \n        ? JSON.parse(localStorage.getItem('notes')) : this.notes = [];\n    } \n  }\n</script>\n\n<style lang=\"less\">\n  @import './assets/less/style.less';\n</style>\n"],"mappings":"AAkBA,OAAAA,OAAA;AACA,OAAAC,QAAA;AACA,OAAAC,SAAA;AACA,OAAAC,WAAA;AACA,OAAAC,QAAA;AAGA;EACAC,IAAA;EACAC,UAAA;IACAN,OAAA;IACAC,QAAA;IACAC,SAAA;IACAC,WAAA;IACAC;EACA;EACAG,IAAA,WAAAA,CAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAC,KAAA,CAAAC,KAAA,CAAAC,SAAA;IACA;IACAC,cAAAV,IAAA;MACA,KAAAW,SAAA,GAAAX,IAAA;MACA,KAAAO,KAAA,CAAAK,IAAA,CAAAH,SAAA;IACA;IACAI,eAAAb,IAAA;MACA,KAAAE,OAAA,GAAAF,IAAA;MACA,KAAAO,KAAA,CAAAO,UAAA,CAAAC,WAAA;IACA;IACAC,eAAAhB,IAAA;MACA,KAAAE,OAAA,GAAAF,IAAA;MACA,KAAAO,KAAA,CAAAU,UAAA,CAAAF,WAAA;IACA;IACAG,kBAAA,WAAAA,CAAAlB,IAAA;MACA,KAAAC,KAAA,GAAAD,IAAA;IACA;IACAmB,aAAA,WAAAA,CAAAnB,IAAA;MACA,KAAAC,KAAA,GAAAD,IAAA;IACA;IACAoB,OAAA,WAAAA,CAAA;MACA,KAAAnB,KAAA,GAAAoB,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;IACAC,IAAA,WAAAA,CAAAzB,IAAA;MACA,KAAAC,KAAA,GAAAD,IAAA;IACA;EACA;EACA0B,QAAA;IACAC,eAAA;MACA,YAAAC,MAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,MAAA,CAAAG,QAAA;IACA,KAAA9B,KAAA,GAAAoB,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,kBACAH,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,kBAAAvB,KAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}