{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'MenuBar',\n  props: ['showModal'],\n  data: function () {\n    return {\n      notes: [],\n      filtNotes: [],\n      celectedCategory: '',\n      query: ''\n    };\n  },\n  computed: {\n    categories() {\n      return this.$store.getters['getCategories'];\n    }\n  },\n  methods: {\n    filtByCategory() {\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n      if (this.celectedCategory != 'all') {\n        for (let i = 0; i < this.notes.length; i++) {\n          if (this.celectedCategory === this.notes[i].cat) {\n            this.filtNotes.push(this.notes[i]);\n          }\n        }\n      } else {\n        this.filtNotes = this.notes;\n      }\n      this.$emit('sendFiltCategoty', this.filtNotes);\n      this.filtNotes = [];\n    },\n    searchOnNotes: function () {\n      console.log(this.query.toLowerCase());\n      this.query.val().toLowerCase();\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","notes","filtNotes","celectedCategory","query","computed","categories","$store","getters","methods","filtByCategory","JSON","parse","localStorage","getItem","i","length","cat","push","$emit","searchOnNotes","console","log","toLowerCase","val"],"sources":["src/components/MenuBar.vue"],"sourcesContent":["<template>\n  <div class=\"menu-container\">\n    <button @click=\"showModal\">Add notes</button>\n    <input type=\"text\" placeholder=\"Enter search query\" id=\"search\" v-model=\"query\" @input=\"searchOnNotes\">\n    <h5>Filter by category</h5>\n    <select class=\"cat-filt\" v-model=\"celectedCategory\" @change=\"filtByCategory()\">\n      <option selected value=\"all\">All</option>\n      <option v-for=\"(items, index) in categories\" :key=\"index\">{{ items }}</option>\n     </select>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MenuBar',\n  props: ['showModal'],\n  data:  function () {\n    return {\n      notes: [],\n      filtNotes: [],\n      celectedCategory: '',\n      query: ''\n    }\n  },\n  computed: {\n        categories () {\n            return this.$store.getters['getCategories'];\n        },\n    },\n  methods: {\n    filtByCategory () {\n      this.notes = JSON.parse(localStorage.getItem('notes'));\n      if (this.celectedCategory != 'all') {\n        for (let i = 0; i < this.notes.length; i++ ) {\n          if (this.celectedCategory === this.notes[i].cat) {\n            this.filtNotes.push(this.notes[i]);\n          } \n        } \n      } else {\n        this.filtNotes = this.notes;\n      }\n      this.$emit('sendFiltCategoty', this.filtNotes);\n      this.filtNotes = [];\n    }, \n    searchOnNotes: function () {\n      console.log(this.query.toLowerCase());\n      this.query.val().toLowerCase();\n    }\n  }\n}\n</script>\n\n\n"],"mappings":";AAaA;EACAA,IAAA;EACAC,KAAA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,KAAA;MACAC,SAAA;MACAC,gBAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,YAAAC,MAAA,CAAAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,KAAAT,KAAA,GAAAU,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,SAAAX,gBAAA;QACA,SAAAY,CAAA,MAAAA,CAAA,QAAAd,KAAA,CAAAe,MAAA,EAAAD,CAAA;UACA,SAAAZ,gBAAA,UAAAF,KAAA,CAAAc,CAAA,EAAAE,GAAA;YACA,KAAAf,SAAA,CAAAgB,IAAA,MAAAjB,KAAA,CAAAc,CAAA;UACA;QACA;MACA;QACA,KAAAb,SAAA,QAAAD,KAAA;MACA;MACA,KAAAkB,KAAA,0BAAAjB,SAAA;MACA,KAAAA,SAAA;IACA;IACAkB,aAAA,WAAAA,CAAA;MACAC,OAAA,CAAAC,GAAA,MAAAlB,KAAA,CAAAmB,WAAA;MACA,KAAAnB,KAAA,CAAAoB,GAAA,GAAAD,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}